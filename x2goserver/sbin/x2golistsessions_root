#!/usr/bin/perl
# Copyright (C) 2007-2014 X2Go Project - http://wiki.x2go.org
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
#
# Copyright (C) 2007-2014  Oleksandr Shneyder <oleksandr.shneyder@obviously-nice.de>
# Copyright (C) 2007-2014  Heinz-Markus Graesing <heinz-m.graesing@obviously-nice.de>

use strict;
use Sys::Hostname;
use Sys::Syslog qw( :standard :macros );
use File::ReadBackwards;

use lib `x2gopath lib`;
use x2gologlevel;


openlog($0,'cons,pid','user');
setlogmask( LOG_UPTO(x2gologlevel()) );


sub is_suspended
{
	my $sess=shift;
	my $user=shift;
	my $log="/tmp/.x2go-${user}/session-C-${sess}.log";
	my $log_line;
	my $log_file = File::ReadBackwards->new( $log ) or return 0;
	while( defined( $log_line = $log_file->readline ) ) {
		next if ( ! ( $log_line =~ m/^Session:/ ) );
		last;
	}
	$log_file->close();
	if ($log_line =~ m/Session suspended/)
	{
		return 1;
	}
	return 0;
}

my $x2go_lib_path = `x2gopath libexec`;

my $uname;

my $serv=shift;
if ( ! $serv)
{
	$serv=hostname;
}

my $outp=`$x2go_lib_path/x2golistsessions_sql $serv 2>/dev/null`;

my @outp=split("\n","$outp");

for (my $i=0;$i<@outp;$i++)
{
	my @sinfo=split('\\|',"@outp[$i]");
	if (@sinfo[4]eq 'F')
	{
		print "@outp[$i]\n";
	}
	else
	{ 
		if (@sinfo[4]eq 'R')
		{
			if (is_suspended(@sinfo[1],@sinfo[11]))
			{
				system("su", "-", "@sinfo[11]", "-c", "$x2go_lib_path/x2gochangestatus 'S' @sinfo[1] > /dev/null");
				@outp[$i] =~ s/\|R\|/\|S\|/;
			}
		}
		print "@outp[$i]\n";
	}
}
